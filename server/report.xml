<testsuites name="Mocha Tests">
  <testsuite name="deduplication by exact title" tests="4" errors="0" failures="0" skipped="4" timestamp="2023-07-18T08:23:10" time="0.001">
    <testcase classname="deduplication by exact title" name="should remove same document from one index by exact title" time="0">
      <skipped/>
    </testcase>
    <testcase classname="deduplication by exact title" name="should keep most recent document by exact title" time="0">
      <skipped/>
    </testcase>
    <testcase classname="deduplication by exact title" name="should query with alias except old index" time="0">
      <skipped/>
    </testcase>
    <testcase classname="deduplication by exact title" name="should remove document with same uuid from index" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="deduplication by similar title" tests="1" errors="0" failures="0" skipped="1" timestamp="2023-07-18T08:23:10" time="0">
    <testcase classname="deduplication by similar title" name="should remove document by similar title" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="Import DCAT AP PLU" tests="1" errors="0" failures="0" skipped="0" timestamp="2023-07-18T08:23:10" time="0.129">
    <testcase classname="Import DCAT AP PLU" name="correct import of DCAT AP PLU" time="0.062">
    </testcase>
  </testsuite>
  <testsuite name="validateUrl()" tests="8" errors="0" failures="0" skipped="0" timestamp="2023-07-18T08:23:10" time="1.224">
    <testcase classname="validateUrl()" name="should return same string for links containing &quot;://&quot;" time="0.001">
    </testcase>
    <testcase classname="validateUrl()" name="should prepend https:// if link valid" time="0.386">
    </testcase>
    <testcase classname="validateUrl()" name="should prepend https:// if redirected link valid" time="0.655">
    </testcase>
    <testcase classname="validateUrl()" name="should prepend http:// if https:// not available but http:// link is valid" time="0.175">
    </testcase>
    <testcase classname="validateUrl()" name="should be undefined for links that are not found" time="0.001">
    </testcase>
    <testcase classname="validateUrl()" name="should be undefined if url is undefined" time="0">
    </testcase>
    <testcase classname="validateUrl()" name="should be undefined if url is empty string" time="0.001">
    </testcase>
    <testcase classname="validateUrl()" name="should be undefined if url only contains whitespace" time="0">
    </testcase>
  </testsuite>
</testsuites>