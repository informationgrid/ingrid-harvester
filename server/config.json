[
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "excel",
    "includeTimestamp": true,
    "priority": null,
    "type": "EXCEL",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "",
    "defaultMcloudSubgroup": [],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "filePath": "./data.xlsx",
    "description": "mCLOUD Excel Datei",
    "disable": false,
    "id": 1,
    "cron": {
      "pattern": "00 01 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_db",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "",
    "defaultMcloudSubgroup": [
      "railway"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [
      "7e526b8c-16bd-4f2c-a02b-8d4d0a29d310"
    ],
    "whitelistedIds": [
      "7e526b8c-16bd-4f2c-a02b-8d4d0a29d310"
    ],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://data.deutschebahn.com",
    "filterTags": [],
    "filterGroups": [],
    "providerPrefix": "",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": true,
    "groupChilds": false,
    "defaultLicense": null,
    "description": "Deutsche Bahn Datenportal",
    "defaultAttribution": "Deutsche Bahn Datenportal",
    "disable": false,
    "id": 6,
    "cronPattern": null,
    "defaultAttributionLink": null,
    "cron": {
      "active": false,
      "pattern": "3 2 * * *"
    },
    "additionalSearchFilter": ""
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_offenesdatenportal",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://www.offenesdatenportal.de",
    "filterTags": [],
    "filterGroups": [
      "transport-verkehr"
    ],
    "providerPrefix": "",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": true,
    "groupChilds": false,
    "defaultLicense": null,
    "description": "Offenesdatenportal",
    "defaultAttribution": "Offenesdatenportal",
    "disable": false,
    "id": 8,
    "defaultAttributionLink": null,
    "cron": {
      "active": true,
      "pattern": "3 2 * * *"
    },
    "additionalSearchFilter": ""
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_portal_hamburg",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "const isWhitelisted = this.settings.whitelistedIds.indexOf(doc.extras.generated_id) !== -1\nconst latestVersion = this.source.extras\n            .filter(extra => extra.key === 'latestVersion').map(extra => extra.value);\n        \nif (!isWhitelisted && latestVersion && latestVersion.length > 0 && latestVersion[0] === 'false') {\n            this.skipped = true;\n}\n\nif(['Brücken', 'ZEB-Netz', 'Straßenverkehrsnetz', 'Straßen- und Wegenetz', 'Verkehrsnetze', 'dwista', 'Lichtsignalanlagen', 'Parkhäuser', 'Straßennetz', 'Fahrradluftstationen', 'Parkscheinautomaten', 'Ladestandorte']\n\t.some(s => doc.title.indexOf(s) !== -1)){\n\tdoc.extras.subgroups = ['roads', 'infrastructure'];\n}\nif(doc.title.indexOf('Ride') !== -1){\n\tdoc.extras.subgroups = ['roads', 'railway', 'infrastructure'];\n}\nif(doc.title.indexOf('SWIS') !== -1){\n\tdoc.extras.subgroups = ['roads', 'climate'];\n}\nif(doc.title.indexOf('Hochbahn') !== -1){\n\tdoc.extras.subgroups = ['railway'];\n}\nif(['Flughafen', 'Fluglärmbeschwerden'].some(s => doc.title.indexOf(s) !== -1)){\n\tdoc.extras.subgroups = ['aviation'];\n}\n\n// Set different mcloud category for whitelist IDs\nconst watersIDs = ['d988b206-0425-42a7-820a-81e8e2c6ca40',\n  'e11af766-005d-4583-a39d-eac6336c4eb2',\n  '20ab493a-1772-4b77-a08e-8867168f791a',\n  '4dd38b65-a2dc-4535-8fd1-4b3be0c9f756',\n  '9840138b-0d45-47d5-bf75-6b609422e282',\n  'd01720ae-c665-49a7-b1dc-7e211474be63',\n  '2bc917c1-d976-4793-83f4-b7c153df3f2d',\n  'b8f1c00a-2f52-4767-98f9-9e9aee0afcb2',\n  '74458796-4d33-47c3-83e6-ff332bc4a303',\n  '17753800-c152-4b07-b197-13ff478fc19a',\n  '410610c0-bc4e-437f-9837-71764c93ed51',\n  'b661cd3b-0eeb-4054-9242-94af19001247',\n  'ded4d0b6-1482-4d47-9450-dcfcf6ef9da8'];\n\nif (watersIDs.indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['waters'];\n}\n\nconst aviationIDs = ['35bf62f3-4e94-45ba-92b6-e34a4ed7c1c2'];\n\nif (aviationIDs.indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['aviation'];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [
      "fb622708-31d5-41c5-8ce9-56ded83ca165",
      "95f51e2d-fd68-4304-a792-dde167a42d0b",
      "f92a2f20-cdd1-4479-a63a-2f7e77ca791f",
      "96e4eb37-8a4e-4542-8b73-65ea1cf45b11",
      "06175f68-85c7-4a64-929d-5150d4fe13c4",
      "35bf62f3-4e94-45ba-92b6-e34a4ed7c1c2",
      "d988b206-0425-42a7-820a-81e8e2c6ca40",
      "e11af766-005d-4583-a39d-eac6336c4eb2",
      "20ab493a-1772-4b77-a08e-8867168f791a",
      "4dd38b65-a2dc-4535-8fd1-4b3be0c9f756",
      "9840138b-0d45-47d5-bf75-6b609422e282",
      "d01720ae-c665-49a7-b1dc-7e211474be63",
      "2bc917c1-d976-4793-83f4-b7c153df3f2d",
      "b8f1c00a-2f52-4767-98f9-9e9aee0afcb2",
      "74458796-4d33-47c3-83e6-ff332bc4a303",
      "17753800-c152-4b07-b197-13ff478fc19a",
      "410610c0-bc4e-437f-9837-71764c93ed51",
      "b661cd3b-0eeb-4054-9242-94af19001247",
      "ded4d0b6-1482-4d47-9450-dcfcf6ef9da8"
    ],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "http://suche.transparenz.hamburg.de",
    "filterTags": [],
    "filterGroups": [
      "transport-und-verkehr"
    ],
    "providerPrefix": "Transparenzportal Hamburg: ",
    "providerField": "author",
    "requestType": "Search",
    "markdownAsDescription": true,
    "groupChilds": false,
    "defaultLicense": null,
    "description": "Transparenzportal Hamburg",
    "defaultAttribution": "Transparenzportal Hamburg",
    "disable": false,
    "id": 9,
    "defaultAttributionLink": null,
    "additionalSearchFilter": "type:dataset",
    "cron": {
      "pattern": "10 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_opendata_nrw",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "// Set date of metadata from special field extras.key='modified'\nconst modifiedDate = this.source.extras\n            .filter(extra => extra.key === 'modified')\n            .map(modifiedHash => this.handleDate(modifiedHash.value));\n        \n        if (modifiedDate && modifiedDate.length > 0) {\n            doc.modified = modifiedDate[0];\n}\n\n// Set date of data from special field extras.key='issued'\nconst issuedDate = this.source.extras\n            .filter(extra => extra.key === 'issued')\n            .map(issuedHash => this.handleDate(issuedHash.value));\n        \n        if (issuedDate && issuedDate.length > 0) {\n            doc.issued = issuedDate[0];\n            doc.extras.temporal.start = issuedDate[0];\n            doc.extras.temporal.end = issuedDate[0];\n}\n\n// Set different mcloud category for whitelist IDs\nconst filteredIDs = ['27d220b1-12c2-539a-b5de-78cc3b097900',\n  'a24a4629-15c7-4a1a-9d5d-ed7b7cc790d3',\n  '630a2706-f676-45f7-8719-310b21f121fb',\n  '4072ca12-eca4-495b-9eeb-e41a411982fb',\n  'b9aeef16-689d-42d5-85d1-27c0a54f6e6c',\n  '377585b1-7113-4433-93ee-09d93f1ab61c',\n  'c4cc9004-179e-4862-9fb7-64805484d28a',\n  '4b0aedab-8c31-43bd-8459-1bccba1898a2'];\n\nif (filteredIDs.indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['infrastructure'];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [
      "DD MMMM, YYYY - hh:mm",
      "YYYY-MM-DDThh:mm:ss",
      "MMMM YYYY",
      "DD.MM.YYYY",
      "YYYY-MM-DD"
    ],
    "blacklistedIds": [],
    "whitelistedIds": [
      "27d220b1-12c2-539a-b5de-78cc3b097900",
      "a24a4629-15c7-4a1a-9d5d-ed7b7cc790d3",
      "630a2706-f676-45f7-8719-310b21f121fb",
      "4072ca12-eca4-495b-9eeb-e41a411982fb",
      "b9aeef16-689d-42d5-85d1-27c0a54f6e6c",
      "377585b1-7113-4433-93ee-09d93f1ab61c",
      "c4cc9004-179e-4862-9fb7-64805484d28a",
      "4b0aedab-8c31-43bd-8459-1bccba1898a2"
    ],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": true,
      "containsDocumentsWithDataBlacklist": "rss,html,doc,pdf"
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://open.nrw",
    "filterTags": [],
    "filterGroups": [
      "tran"
    ],
    "providerPrefix": "Open NRW: ",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": {
      "id": "dl-de-by-2.0",
      "title": "Datenlizenz Deutschland Namensnennung 2.0",
      "url": "https://www.govdata.de/dl-de/by-2-0"
    },
    "description": "NRW Portal",
    "defaultAttribution": "NRW Portal",
    "disable": false,
    "id": 11,
    "defaultAttributionLink": null,
    "cron": {
      "pattern": "15 2 * * *",
      "active": true
    },
    "additionalSearchFilter": ""
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_wsv",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "",
    "defaultMcloudSubgroup": [
      "waters"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://via.bund.de/wsv/geokat/csw",
    "eitherKeywords": [
      "opendata"
    ],
    "httpMethod": "POST",
    "resultType": "results",
    "description": "WSV: Wasserstraßen- und Schifffahrtsverwaltung des Bundes",
    "recordFilter": "            <ogc:Filter>\n                <ogc:And>\n                    <ogc:PropertyIsEqualTo>\n                        <ogc:PropertyName>subject</ogc:PropertyName>\n                        <ogc:Literal>opendata</ogc:Literal>\n                    </ogc:PropertyIsEqualTo>\n                    <ogc:PropertyIsNotEqualTo>\n                        <ogc:PropertyName>subject</ogc:PropertyName>\n                        <ogc:Literal>Boden</ogc:Literal>\n                    </ogc:PropertyIsNotEqualTo>\n                </ogc:And>\n            </ogc:Filter>",
    "defaultAttribution": "WSV.Geokatalog CSW",
    "defaultAttributionLink": "https://via.bund.de/wsv/geokat/csw?SERVICE=CSW&REQUEST=GetCapabilities",
    "disable": false,
    "id": 12,
    "cron": {
      "pattern": "40 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_bsh",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "",
    "defaultMcloudSubgroup": [
      "waters"
    ],
    "defaultDCATCategory": [
      "ENVI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://www.geoseaportal.de/geonetwork/srv/ger/csw",
    "eitherKeywords": [
      "opendata"
    ],
    "httpMethod": "POST",
    "resultType": "results",
    "description": "BSH",
    "recordFilter": "<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\"><ogc:PropertyIsEqualTo><ogc:PropertyName>subject</ogc:PropertyName><ogc:Literal>opendata</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter>",
    "defaultAttribution": "GeoSeaPortal (BSH)",
    "defaultAttributionLink": "https://www.geoseaportal.de/",
    "disable": false,
    "id": 17,
    "cron": {
      "pattern": "30 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_geoservice_dlr",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "",
    "defaultMcloudSubgroup": [
      "aviation",
      "roads"
    ],
    "defaultDCATCategory": [
      "TECH"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://geoservice.dlr.de/catalogue/srv/eng/csw",
    "eitherKeywords": [
      "opendata"
    ],
    "httpMethod": "GET",
    "resultType": "results",
    "disable": false,
    "description": "EOC Geoservice DLR",
    "defaultAttribution": "EOC Geoservice DLR",
    "defaultAttributionLink": "https://geoservice.dlr.de",
    "id": 20,
    "recordFilter": "<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\"><ogc:PropertyIsEqualTo><ogc:PropertyName>subject</ogc:PropertyName><ogc:Literal>opendata</ogc:Literal></ogc:PropertyIsEqualTo></ogc:Filter>",
    "cronPattern": "0 2 * * *",
    "cron": {
      "active": true,
      "pattern": "35 2 * * *"
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_rlp",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "const railwayOnlyIDs = ['10388c98-a909-406a-9445-6e8219650e7f'];\nconst railwayAdditionalIDs = ['618b3cdc-1393-4a34-b8cd-1407d3d3cf08'];\nconst infrastructureIDs = ['5b8e1a97-1b5c-465f-8578-5e1bf4971f0b',\n\t'60b0e7aa-1d98-4f07-924d-feac7a8f7eae',\n\t'882d452a-8f2d-4344-a46b-4cf37f960cec',];\n\nif (railwayOnlyIDs.indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['railway'];\n}\nelse if (railwayAdditionalIDs.indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['roads', 'railway'];\n}\nelse if (infrastructureIDs.indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['infrastructure'];\n}\n",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [
      "YYYY-MM-DDThh:mm:ss"
    ],
    "blacklistedIds": [],
    "whitelistedIds": [
      "5b8e1a97-1b5c-465f-8578-5e1bf4971f0b",
      "60b0e7aa-1d98-4f07-924d-feac7a8f7eae",
      "882d452a-8f2d-4344-a46b-4cf37f960cec"
    ],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://daten.rlp.de/",
    "filterTags": [
      "Verkehr"
    ],
    "filterGroups": [],
    "providerPrefix": "OpenData Rheinland-Pfalz: ",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": null,
    "id": 28,
    "description": "OpenData Rheinland-Pfalz",
    "defaultAttribution": "OpenData Rheinland-Pfalz",
    "defaultAttributionLink": null,
    "cron": {
      "active": true,
      "pattern": "5 2 * * *"
    },
    "additionalSearchFilter": ""
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_schleswig_holstein",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 50,
    "startPosition": 1,
    "customCode": "const infrastructureIDs = ['8cd4543a-8a38-45dd-8f79-5e0e8253ff08'];\nconst aviationIDs = ['5b0bedba-f10a-30f6-9cb1-6d9796f8ef70'];\nconst watersAndRoadsIDs = ['618b3cdc-1393-4a34-b8cd-1407d3d3cf08',\n\t'49e939f6-08f8-38ad-a85c-9861d2ec99ac',\n\t'77105e46-e23b-3c1e-b84a-59b77b032d89',\n\t'370adec3-d38a-30e3-a89b-cf1d7350f926',\n\t'adcdfdeb-9520-3cf4-b3d5-a134f4f97881',\n\t'0f9bfd90-b532-35d0-8d6d-51527454b9ee',\n\t'9a7015e8-704f-3d06-a3ae-6b5c11a50162'];\nconst watersIDs = ['b06b3f9e-b220-3a9e-a956-7a46077b396b',\n\t'2658b8a7-5d2b-3c4a-91c1-9c405078c6ce',\n\t'a51a65b7-097f-3946-8825-35f193964320',\n\t'c209bc9a-7950-32fb-88b2-b9c29054f458',\n\t'7d520332-65a2-3c9a-a792-090987ff81b2',\n\t'4be7d97c-7ca6-37b1-a276-4aff60c97fc0',\n\t'7f907139-b383-3dae-84bb-7d483cbc83c5',\n\t'4c586654-4659-319c-aab7-ee87629b1f01',\n\t'c4cc34d5-6e1f-385e-8ebb-bd043250bd14',\n\t'b64b796f-243d-3131-91d5-fe0c21ac48e8'];\n\nif (infrastructureIDs.indexOf(this.source.id) !== -1) {\n\tdoc.extras.subgroups = ['infrastructure'];\n}\nif (aviationIDs.indexOf(this.source.id) !== -1) {\n\tdoc.extras.subgroups = ['aviation'];\n}\nif (watersAndRoadsIDs.indexOf(this.source.id) !== -1) {\n\tdoc.extras.subgroups = ['waters', 'roads'];\n}\t\nif (watersIDs.indexOf(this.source.id) !== -1 || doc.title.indexOf('schifffahrt') !== -1) {\n\tdoc.extras.subgroups = ['waters'];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [
      "YYYY-MM-DDThh:mm:ss"
    ],
    "blacklistedIds": [],
    "whitelistedIds": [
      "8cd4543a-8a38-45dd-8f79-5e0e8253ff08"
    ],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://opendata.schleswig-holstein.de",
    "filterTags": [],
    "filterGroups": [
      "tran"
    ],
    "providerPrefix": "OpenData Schleswig-Holstein: ",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": true,
    "defaultLicense": null,
    "id": 30,
    "description": "OpenData Schleswig-Holstein",
    "defaultAttribution": "OpenData Schleswig-Holstein",
    "defaultAttributionLink": null,
    "cron": {
      "active": true,
      "pattern": "10 2 * * *"
    },
    "additionalSearchFilter": ""
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_geomis_sachsen",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "doc.extras.subgroups = ['roads'];\n\nif(doc.title.indexOf('Verkehrsnetze') !== -1){\n\tdoc.extras.subgroups.push('railway');\n\tdoc.extras.subgroups.push('waters');\n\tdoc.extras.subgroups.push('aviation');\n\tdoc.extras.subgroups.push('infrastructure');\n}\nelse if(doc.title.indexOf('Verkehrsfläche') !== -1 || doc.title.indexOf('Verkehrsraum') !== -1){\n\tdoc.extras.subgroups.push('railway');\n\tdoc.extras.subgroups.push('aviation');\n\tdoc.extras.subgroups.push('infrastructure');\n}\nelse if((doc.title.indexOf('Topographische Karte') !== -1) || (doc.title.indexOf('Landschaftsmodell') !== -1)){\n\tdoc.extras.subgroups.push('railway');\n\tdoc.extras.subgroups.push('waters');\n\tdoc.extras.subgroups.push('aviation');\n}\nelse if(doc.title.indexOf('Straßenknotennetz') !== -1){\n\tdoc.extras.subgroups.push('infrastructure');\n}\nelse if(doc.title.indexOf('Wetter') !== -1){\n\tdoc.extras.subgroups.push('climate');\n}\nelse if(doc.title.indexOf('Wirtschaft') !== -1){\n\tdoc.extras.subgroups.push('aviation');\n}\nelse if(doc.title.indexOf('Landeplätze') !== -1){\n\tdoc.extras.subgroups = ['aviation'];\n}\nelse if(doc.title.indexOf('Schienennetzdichte') !== -1){\n\tdoc.extras.subgroups = ['railway'];\n}\nelse if(doc.title.indexOf('Wasserfläche') !== -1 || doc.title.indexOf('Gewässerranddichte') !== -1){\n\tdoc.extras.subgroups = ['waters'];\n}\nelse if(doc.title.indexOf('Gewässer') !== -1 || doc.keywords.indexOf('Gewässer') !== -1){\n\tthis.skipped = true;\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://geomis.sachsen.de/geomis-csw/api",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 31,
    "description": "GeoMIS.Sachsen",
    "defaultAttribution": "GeoMIS Sachsen",
    "defaultAttributionLink": "https://geomis.sachsen.de",
    "recordFilter": "            <ogc:Filter>\n                <ogc:Or>\n                    <ogc:And>\n                        <ogc:PropertyIsEqualTo>\n                            <ogc:PropertyName>subject</ogc:PropertyName>\n                            <ogc:Literal>opendata</ogc:Literal>\n                        </ogc:PropertyIsEqualTo>\n                        <ogc:Or>\n                            <ogc:PropertyIsEqualTo>\n                                <ogc:PropertyName>HierarchyLevelName</ogc:PropertyName>\n                                <ogc:Literal>transportation</ogc:Literal>\n                            </ogc:PropertyIsEqualTo>\n                            <ogc:PropertyIsEqualTo>\n                                <ogc:PropertyName>TopicCategory</ogc:PropertyName>\n                                <ogc:Literal>transportation</ogc:Literal>\n                            </ogc:PropertyIsEqualTo>\n                        </ogc:Or>\n                    </ogc:And>\n                    <ogc:And>\n                        <ogc:PropertyIsLike wildCard=\"*\" singleChar=\".\" escapeChar=\"@\">\n                            <ogc:PropertyName>OrganisationName</ogc:PropertyName>\n                            <ogc:Literal>Leibniz-Institut.f.r..kologische.Raumentwicklung</ogc:Literal>\n                        </ogc:PropertyIsLike>\n                        <ogc:Or>\n                            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\".\" escapeChar=\"@\">\n                                <ogc:PropertyName>subject</ogc:PropertyName>\n                                <ogc:Literal>*verkehr*</ogc:Literal>\n                            </ogc:PropertyIsLike>\n                            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\".\" escapeChar=\"@\">\n                                <ogc:PropertyName>subject</ogc:PropertyName>\n                                <ogc:Literal>*stra.e*</ogc:Literal>\n                            </ogc:PropertyIsLike>\n                            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\".\" escapeChar=\"@\">\n                                <ogc:PropertyName>subject</ogc:PropertyName>\n                                <ogc:Literal>*schiene*</ogc:Literal>\n                            </ogc:PropertyIsLike>\n                            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\".\" escapeChar=\"@\">\n                                <ogc:PropertyName>subject</ogc:PropertyName>\n                                <ogc:Literal>*wasser*</ogc:Literal>\n                            </ogc:PropertyIsLike>\n                            <ogc:PropertyIsLike wildCard=\"*\" singleChar=\".\" escapeChar=\"@\">\n                                <ogc:PropertyName>subject</ogc:PropertyName>\n                                <ogc:Literal>*gew.sser*</ogc:Literal>\n                            </ogc:PropertyIsLike>\n                        </ogc:Or>\n                    </ogc:And>\n                </ogc:Or>\n            </ogc:Filter>",
    "cron": {
      "active": true,
      "pattern": "40 2 * * *"
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_geonet_mrn",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "if(doc.keywords.indexOf(\"ÖPNV\") != -1 || doc.keywords.indexOf(\"Eisenbahn\") != -1){\n  doc.extras.subgroups = [\"railway\"];\n}\nif(doc.keywords.indexOf(\"Luftverkehr\") != -1){\n  doc.extras.subgroups = [\"aviation\"];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "http://ckan.geonet-mrn.de",
    "filterTags": [
      "Verkehr",
      "Luftverkehr",
      "ÖPNV",
      "Eisenbahn"
    ],
    "filterGroups": [],
    "providerPrefix": "",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": null,
    "id": 32,
    "description": "GeoNet.MRN",
    "defaultAttribution": "GeoNet.MRN",
    "defaultAttributionLink": "http://ckan.geonet-mrn.de",
    "additionalSearchFilter": "",
    "cron": {
      "pattern": "15 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_bkg",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "if(doc.title.indexOf('Landschaftsmodell') != -1 || doc.title.indexOf('Topographische Karte') != -1){\n  doc.extras.subgroups = ['roads', 'waters', 'railway', 'infrastructure', 'aviation'];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://mis.bkg.bund.de/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 33,
    "description": "BKG",
    "defaultAttribution": "BKG",
    "defaultAttributionLink": "https://mis.bkg.bund.de/portal/",
    "recordFilter": "\n            <ogc:Filter>\n                <ogc:And>\n                    <ogc:PropertyIsEqualTo>\n                        <ogc:PropertyName>OtherConstraints</ogc:PropertyName>\n                        <ogc:Literal>Datenlizenz Deutschland</ogc:Literal>\n                    </ogc:PropertyIsEqualTo>\n                    <ogc:Or>\n                        <ogc:PropertyIsEqualTo>\n                            <ogc:PropertyName>subject</ogc:PropertyName>\n                            <ogc:Literal>Verkehrswesen</ogc:Literal>\n                        </ogc:PropertyIsEqualTo>\n                        <ogc:PropertyIsEqualTo>\n                            <ogc:PropertyName>subject</ogc:PropertyName>\n                            <ogc:Literal>Verkehr</ogc:Literal>\n                        </ogc:PropertyIsEqualTo>\n                        <ogc:PropertyIsEqualTo>\n                            <ogc:PropertyName>subject</ogc:PropertyName>\n                            <ogc:Literal>Kfz</ogc:Literal>\n                        </ogc:PropertyIsEqualTo>\n                    </ogc:Or>\n                </ogc:And>\n            </ogc:Filter>",
    "cron": {
      "pattern": "45 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_geoportal_brandenburg",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "let downloads = CswMapper.select('.//gmd:CI_OnlineResource/gmd:function/gmd:CI_OnLineFunctionCode/@codeListValue=\"download\"', this.record);\nif (!downloads) {\n\tthis.skipped = true;\n}",
    "defaultMcloudSubgroup": [
      "waters"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://geoportal.brandenburg.de/csw-gdi-bb/service?SERVICE=CSW",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 35,
    "description": "Geoportal Brandenburg",
    "defaultAttribution": "Geoportal Brandenburg",
    "defaultAttributionLink": null,
    "recordFilter": "            \n<ogc:Filter>\n    <ogc:And>\n        <ogc:PropertyIsLike escapeChar=\"!\" singleChar=\"?\" wildCard=\"*\">\n            <ogc:PropertyName>OtherConstraints</ogc:PropertyName>\n            <ogc:Literal>*Datenlizenz Deutschland*</ogc:Literal>\n        </ogc:PropertyIsLike>\n        <ogc:PropertyIsLike escapeChar=\"!\" singleChar=\"?\" wildCard=\"*\">\n            <ogc:PropertyName>Keyword</ogc:PropertyName>\n            <ogc:Literal>Gewässer</ogc:Literal>\n        </ogc:PropertyIsLike>\n    </ogc:And>\n</ogc:Filter>\n",
    "disable": false,
    "cron": {
      "pattern": "55 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_geodaten_mv",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "let topicCategories = CswMapper.select('./*/gmd:topicCategory/gmd:MD_TopicCategoryCode', this.idInfo)\nlet isRoads = false;\nlet isWaters = false;\nfor(let i = 0; i < topicCategories.length; i++){\n    let topicCategory = topicCategories[i].textContent;\n    if(topicCategory === 'transportation') isRoads = true;\n    if(topicCategory === 'inlandWaters') isWaters = true;\n}\nfor(let i = 0; i < doc.keywords.length; i++){\n    let keyword= doc.keywords[i];\n    if(keyword=== 'Verkehrsnetze') isRoads = true;\n    if(keyword=== 'Gewässernetz') isWaters = true;\n}\nif(isRoads || isWaters){\n    let subgroups = [];\n    if(isRoads) subgroups.push('roads')\n    if(isWaters) subgroups.push('waters')\n    doc.extras.subgroups = subgroups;\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "http://www.geodaten-mv.de/soapServices/CSWStartup",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 36,
    "description": "Geodaten MV",
    "defaultAttribution": "Geodaten MV",
    "defaultAttributionLink": null,
    "recordFilter": "<ogc:Filter>\n\t<ogc:And>\n\t\t<ogc:Or>\n\t\t\t<ogc:PropertyIsLike escapeChar=\"!\" singleChar=\"?\" wildCard=\"*\">\n\t\t\t\t<ogc:PropertyName>OtherConstraints</ogc:PropertyName>\n\t\t\t\t<ogc:Literal>*Datenlizenz Deutschland*</ogc:Literal>\n\t\t\t</ogc:PropertyIsLike>\n\t\t\t<ogc:PropertyIsLike escapeChar=\"!\" singleChar=\"?\" wildCard=\"*\">\n\t\t\t\t<ogc:PropertyName>OtherConstraints</ogc:PropertyName>\n\t\t\t\t<ogc:Literal>*Creative Commons*</ogc:Literal>\n\t\t\t</ogc:PropertyIsLike>\n\t\t</ogc:Or>\n\t\t<ogc:Or>\n\t\t\t<ogc:PropertyIsEqualTo>\n\t\t\t\t<ogc:PropertyName>subject</ogc:PropertyName>\n\t\t\t\t<ogc:Literal>Verkehrsnetze</ogc:Literal>\n\t\t\t</ogc:PropertyIsEqualTo>\n\t\t\t<ogc:PropertyIsLike escapeChar=\"!\" singleChar=\"?\" wildCard=\"*\">\n\t\t\t\t<ogc:PropertyName>Subject</ogc:PropertyName>\n\t\t\t\t<ogc:Literal>Gew?ssernetz</ogc:Literal>\n\t\t\t</ogc:PropertyIsLike>\n\t\t\t<ogc:PropertyIsEqualTo>\n\t\t\t\t<ogc:PropertyName>TopicCategory</ogc:PropertyName>\n\t\t\t\t<ogc:Literal>transportation</ogc:Literal>\n\t\t\t</ogc:PropertyIsEqualTo>\n\t\t\t<ogc:PropertyIsEqualTo>\n\t\t\t\t<ogc:PropertyName>TopicCategory</ogc:PropertyName>\n\t\t\t\t<ogc:Literal>inlandWaters</ogc:Literal>\n\t\t\t</ogc:PropertyIsEqualTo>\n\t\t</ogc:Or>\n\t</ogc:And>\n</ogc:Filter>",
    "disable": false,
    "cron": {
      "pattern": "50 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_eba_laermkartierung",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "for(let i = 0; i< doc.distribution.length; i++){\n    let distribution = doc.distribution[i];\n    if(distribution.format && distribution.format[0] === 'unknown'){\n        distribution.format[0] = 'HTML';\n    }\n}",
    "defaultMcloudSubgroup": [
      "railway"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://laermkartierung.eisenbahn-bundesamt.de/geonetwork/srv/eng/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 37,
    "description": "EBA Laermkartierung",
    "defaultAttribution": "EBA Laermkartierung",
    "defaultAttributionLink": null,
    "recordFilter": "            <ogc:Filter>\n               <ogc:PropertyIsEqualTo>\n                    <ogc:PropertyName>subject</ogc:PropertyName>\n                    <ogc:Literal>opendata</ogc:Literal>\n               </ogc:PropertyIsEqualTo>\n            </ogc:Filter>",
    "disable": false,
    "cron": {
      "pattern": "37 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_geoportal_bw",
    "includeTimestamp": true,
    "priority": -5,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://www.geoportal-bw.de/geonetwork/srv/ger/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 38,
    "description": "Geoportal BW",
    "defaultAttribution": "Geoportal BW",
    "defaultAttributionLink": null,
    "recordFilter": "<ogc:Filter>\n    <ogc:And>\n\t<ogc:PropertyIsEqualTo>\n\t\t<ogc:PropertyName>subject</ogc:PropertyName>\n\t\t<ogc:Literal>opendata</ogc:Literal>\n\t</ogc:PropertyIsEqualTo>\n\t<ogc:PropertyIsEqualTo>\n\t\t<ogc:PropertyName>TopicCategory</ogc:PropertyName>\n\t\t<ogc:Literal>transportation</ogc:Literal>\n\t</ogc:PropertyIsEqualTo>\n    </ogc:And>\n</ogc:Filter> ",
    "disable": false,
    "cron": {
      "active": true,
      "pattern": "55 02 * * *"
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_metaver_hb",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://metaver.de/csw/partner/hb",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 39,
    "description": "MetaVer Bremen",
    "defaultAttribution": "MetaVer Bremen",
    "defaultAttributionLink": null,
    "recordFilter": "<ogc:Filter>\n    <ogc:PropertyIsEqualTo>\n        <ogc:PropertyName>subject</ogc:PropertyName>\n        <ogc:Literal>Verkehr</ogc:Literal>\n    </ogc:PropertyIsEqualTo>\n</ogc:Filter>",
    "disable": false,
    "cron": {
      "pattern": "46 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_metaver_st",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "if(doc.title.indexOf('Wetterinformationen') !== -1){\n    doc.extras.subgroups = ['roads', 'climate'];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [
      "4C4D9986-8BF1-4703-815E-5F0D4C08A9D6",
      "3B75D56A-B995-4050-86C9-1ECD4AE10843",
      "672A102D-ACBF-46C9-B7EA-4F437D3395DD"
    ],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://metaver.de/csw/partner/st",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 40,
    "description": "MetaVer Sachsen-Anhalt",
    "defaultAttribution": "MetaVer Sachsen-Anhalt",
    "defaultAttributionLink": null,
    "recordFilter": "<ogc:Filter>\n    <ogc:PropertyIsEqualTo>\n        <ogc:PropertyName>subject</ogc:PropertyName>\n        <ogc:Literal>Verkehr</ogc:Literal>\n    </ogc:PropertyIsEqualTo>\n</ogc:Filter>",
    "disable": false,
    "cron": {
      "pattern": "47 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_metaver_bb",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": "if(doc.title.indexOf('Ballungsräume') !== -1){\n    doc.extras.subgroups=['roads', 'railway'];\n}\nif(doc.title.indexOf('Flughafen')  !== -1){\n    doc.extras.subgroups=['aviation'];\n}\nif(doc.title.indexOf('INSPIRE')  !== -1){\n    doc.extras.subgroups=['roads', 'railway', 'aviation'];\n}",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://metaver.de/csw/partner/bb",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 41,
    "description": "MetaVer Brandenburg",
    "defaultAttribution": "MetaVer Brandenburg",
    "defaultAttributionLink": null,
    "recordFilter": "<ogc:Filter>\n    <ogc:PropertyIsEqualTo>\n        <ogc:PropertyName>subject</ogc:PropertyName>\n        <ogc:Literal>Lärm</ogc:Literal>\n    </ogc:PropertyIsEqualTo>\n</ogc:Filter>",
    "disable": false,
    "cron": {
      "active": true,
      "pattern": "45 02 * * *"
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "oai_dwd",
    "includeTimestamp": true,
    "priority": null,
    "type": "OAI",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "climate"
    ],
    "defaultDCATCategory": [
      "ENVI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "providerUrl": "https://oai.dwd.de/oai/provider",
    "eitherKeywords": [],
    "set": "mCLOUD",
    "id": 45,
    "description": "OAI DWD",
    "defaultAttribution": "DWD",
    "defaultAttributionLink": "https://oai.dwd.de/oai/provider?verb=ListRecords&metadataPrefix=iso19139&set=mCLOUD",
    "disable": false,
    "cron": {
      "pattern": "50 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "dcat_govdata",
    "includeTimestamp": true,
    "priority": -10,
    "type": "DCAT",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "doc.extras.metadata.source.portal_link='https://www.govdata.de/';\nlet contributor = DcatMapper.select('./dcatde:contributorID/@rdf:resource', this.record, true);\nif(contributor && contributor.textContent.endsWith(\"mCloud\")){\n\tthis.skipped = true;\n}\nif(!doc.distribution || doc.distribution.length === 0){\n\tthis.skipped = true;\n}\nswitch(doc.extras.display_contact[0].name){\n    case 'GovData DCAT-AP':\n        if(doc.title.indexOf('Binnenschiffahrt') !== -1 || doc.title.indexOf('WRRL') !== -1) doc.extras.subgroups = ['waters'];\n        else if(doc.title.indexOf('Fahrplandaten') !== -1) doc.extras.subgroups = ['roads', 'railway'];\n        else if(doc.title.indexOf('Luftverkehr') !== -1) doc.extras.subgroups = ['aviation'];\n        else  this.skipped = true;\n        //Schlagwort 'gewässernetz' oder 'hydrographie' vorhanden --> 'Wasserstraßen'\n        //Schlagwort 'umweltüberwachung': Standard-Kategorie 'Wasserstraßen',\n\n        //außer bei 'Niederschlagsmessnetz', 'Agrarmeteorologisches Messnetz', 'Luft- und Depositionsmessnetz Sachsen (AG Mz)' --> 'Wetter & Klima'\n        //außer bei 'Straßenzustands- und Wetter-Informationssystem (SWIS)', 'Immissionskataster' --> 'Wetter & Klima' & 'Straßen'\n        //außer bei 'Kartierungsgebiet', 'Belastete je Gemeinde' --> 'Straßen', 'Bahn', 'Luft- und Raumfahrt'\n\n        //UUIDs ausschließen: b11bc8e2-034b-40ea-b1d6-eb3c1ec441ff, f100f81b-22a8-56b4-8f5a-340d15fd8106, eb523000-c2f9-43b6-bac1-267dd015b775, ac2293e2-62a6-4889-b9c4-3534cbdc27bd, 4b4b6499-a473-44f3-baa8-864d426fce0d\n        break;\n    case 'GovData: Statistisches Bundesamt':\n        if(doc.title.indexOf('Berichtsflughafen') !== -1 || doc.title.indexOf('Luftverkehr') !== -1) doc.extras.subgroups = ['aviation'];\n        else if(doc.title.indexOf('Eisenbahngüterverkehr') !== -1 || doc.title.indexOf('Schienennetzes') !== -1) doc.extras.subgroups = ['railway'];\n        else if(['Seeverkehr', 'Seegüterumschlag', 'Binnensch.', 'Binnenschifffahrt', 'Fährverkehr', 'Seehäfen'].some(s => doc.title.indexOf(s) !== -1))  doc.extras.subgroups = ['waters'];\n        else if(doc.title.indexOf('Rohrfernleitungsstatistik') !== -1) doc.extras.subgroups = ['infrastructure'];\n        else if(doc.title.indexOf('Bussen und Bahnen') !== -1) doc.extras.subgroups = ['roads', 'railway'];\n        else doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Regionalverband Ruhr':\n        if(doc.title.indexOf('Verkehr') !== -1 || doc.title.indexOf('Radfahren') !== -1 || doc.title.indexOf('ÖPNV') !== -1)\n\t\t\tdoc.extras.subgroups = ['roads'];\n        else if (doc.title.indexOf('Gewässer') !== -1)\n\t\t\tdoc.extras.subgroups = ['waters'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Nationalparkverwaltung Niedersächsisches Wattenmeer':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Nationalparkverwaltung Niedersächsisches Wattenmeer / Niedersächsischer Landesbetrieb für Wasserwirtschaft Küsten- und Naturschutz':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Stadt Trier':\n        if(doc.title.indexOf('Oberflächengewässer') !== -1) doc.extras.subgroups = ['waters'];\n        else if(['Fahrrad', 'Parken', 'Busparkplätze', 'Nahverkehr', 'Verkehr', 'Behindertenparkplätze', 'Elektromobilität'].some(s => doc.title.indexOf(s) !== -1))  doc.extras.subgroups = ['roads'];\n        else this.skipped = true;\n        break;\n    case 'GovData: SGD Nord - Referat 41 - Landesplanung, Raumordnung':\n        if(doc.title.indexOf('Hochgeschwindigkeitsstrecke') !== -1)  doc.extras.subgroups = ['railway'];\n        else if(doc.title.indexOf('Straßenverbindung') !== -1 || doc.title.indexOf('Verkehrs') !== -1)  doc.extras.subgroups = ['roads'];\n        else if(doc.title.indexOf('Hochwasserschutz') !== -1)  doc.extras.subgroups = ['waters'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Umweltbundesamt':\n        if(doc.title.indexOf('Großflughäfen') !== -1 || doc.title.indexOf('Flughäfen') !== -1)  doc.extras.subgroups = ['aviation'];\n        else if(doc.title.indexOf('Luftqualitätsdaten') !== -1)  doc.extras.subgroups = ['climate'];\n        else if(doc.title.indexOf('Ballungsräume') !== -1)  doc.extras.subgroups = ['roads', 'railway', 'aviation'];\n        else if(doc.title.indexOf('Seentypologie') !== -1 || doc.title.indexOf('Einzugsgebiete') !== -1 || doc.title.indexOf('Seen') !== -1) doc.extras.subgroups = ['waters'];\n        else if(doc.title.indexOf('Hauptverkehrsstraßen') !== -1)  doc.extras.subgroups = ['roads'];\n        else if(doc.title.indexOf('Haupteisenbahnstrecken') !== -1)  doc.extras.subgroups = ['railway'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Thüringer Landesamt für Bodenmanagement und Geoinformation':\n        if(doc.title.indexOf('Gewaesser') !== -1 || doc.title.indexOf('Hydro') !== -1) doc.extras.subgroups = ['waters'];\n        else if(doc.title.indexOf('Digitale Topographische Karte') !== -1 || doc.title.indexOf('Verkehrsnetze') !== -1 || doc.title.indexOf('Verkehr') !== -1)  doc.extras.subgroups = ['roads', 'railway', 'waters', 'aviation'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Niedersächsisches Landesamt für Verbraucherschutz und Lebensmittelsicherheit':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Landesbetrieb Mobilität Rheinland-Pfalz':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Gewerbeaufsichtsamt Hildesheim, Zentrale Unterstützungsstelle Luftreinhaltung, Lärm, Gefahrstoffe und Störfallvorsorge (ZUS LLGS)':\n        if(doc.title.indexOf('Messstationen') !== -1 || doc.title.indexOf('PM10') !== -1 || doc.title.indexOf('NO2') !== -1)  doc.extras.subgroups = ['roads', 'climate'];\n        else if(doc.title.indexOf('Umweltzonen') !== -1)  doc.extras.subgroups = ['roads'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Landkreis Diepholz':\n        if(doc.title.indexOf('Strassenmeistereibezirke') !== -1 || doc.title.indexOf('Fahrradleitsystem') !== -1 || doc.title.indexOf('Autobahn') !== -1)  doc.extras.subgroups = ['roads'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Statistische Ämter des Bundes und der Länder':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Landeshauptstadt Dresden':\n        doc.extras.subgroups = ['waters'];\n        if(this.uuid === 'cf1b447c-2d3b-4e85-a61f-fd8ea49f121c') this.skipped = true;\n        break;\n    case 'GovData: Senatsverwaltung für Umwelt, Verkehr und Klimaschutz Berlin':\n        //--> bekommen wir eigentlich über eigene Schnittstelle rein. Hier bitte für mich ein Ticket anlegen, damit ich noch mal prüfe, ob wir Daten ausschließen, die jetzt über den Umweg GovData rein kommen.\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Statistisches Landesamt des Freistaates Sachsen':\n        if(doc.title.indexOf('Binnenschifffahrt') !== -1)  doc.extras.subgroups = ['waters'];\n        else doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Bundesamt für Strahlenschutz':\n        if(doc.title.indexOf('Bundeswasserstrassen') !== -1 || doc.title.indexOf('Nord- und Ostsee') !== -1)  doc.extras.subgroups = ['waters'];\n        else doc.extras.subgroups = ['climate'];\n        break;\n    case 'GovData: Niedersächsisches Ministerium für Umwelt, Energie, Bauen und Klimaschutz, Referat 14 - Umweltinformation, Digitalisierung, eGovernment':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Stadt Gelsenkirchen':\n        if(doc.title.indexOf('Infrastrukturdaten') !== -1)  doc.extras.subgroups = ['infrastructure'];\n        else if(doc.title.indexOf('Stellplatzablösesatzung') !== -1)  doc.extras.subgroups = ['roads'];\n        else this.skipped = true;\n        break;\n    case 'GovData: Stadt Mittenwalde':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Statistisches Landesamt Bremen':\n        if(doc.title.indexOf('Häfen') !== -1)  doc.extras.subgroups = ['waters'];\n        else doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: NLWKN':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Nds. Landesbehörde f. Straßenbau u. Verkehr':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Senatorin für Klimaschutz, Umwelt, Mobilität, Stadtentwicklung und Wohnungsbau':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: ThüringenForst AöR, Forstliches Forschungs- und Kompetenzzentrum':\n        doc.extras.subgroups = ['roads', 'railway'];\n        break;\n    case 'GovData: NLWKN Betriebsstelle Brake-Oldenburg':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Verkehrslenkung Berlin':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Landesamt für Umwelt Brandenburg (LfU), Abteilung Wasserwirtschaft 1 (Genehmigungen / Grundlagen), Referat W16 - Hochwasserrisikomanagement, Wasserrahmenrichtlinie':\n        doc.extras.subgroups = ['waters'];\n        break;\n    case 'GovData: Kataster- und Vermessungsamt':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Stadt Braunschweig, Fachbereich 61 Stadtplanung und Umweltschutz, Abt. 61.2 Geoinformation':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Barnimer Energiebeteiligungsgesellschaft mbH':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Landesbetrieb Straßenwesen Brandenburg':\n        doc.extras.subgroups = ['roads'];\n        break;\n    case 'GovData: Landesvermessung und Geobasisinformation Brandenburg (LGB)':\n        doc.extras.subgroups = ['roads'];\n\t\tif(doc.title.indexOf('Gewässer') !== -1 || doc.title.indexOf('Hydro') !== -1)  doc.extras.subgroups = ['waters'];\n\t\tif(doc.title.indexOf('Verkehrsnetze') !== -1) doc.extras.subgroups = ['roads', 'railway'];\n\t\tif(doc.title.indexOf('Gebäude') !== -1 || doc.title.indexOf('Hausumringe') !== -1)  this.skipped = true;\n        break;\n    default:\n        this.skipped = true;\n        break;\n}\n",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "catalogUrl": "https://www.govdata.de/ckan/catalog/catalog.rdf?fq=groups:tran+NOT+tags:bauleitplan",
    "filterTags": [],
    "filterThemes": [],
    "id": 46,
    "description": "GovData DCAT-AP",
    "defaultAttribution": "GovData",
    "defaultAttributionLink": "https://www.govdata.de/",
    "disable": false,
    "providerPrefix": "GovData: ",
    "dcatProviderField": "creator",
    "cron": {
      "pattern": "05 03 * * * ",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "dcat_hro",
    "includeTimestamp": true,
    "priority": null,
    "type": "DCAT",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "REGI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "catalogUrl": "https://www.opendata-hro.de/catalog.rdf",
    "filterTags": [],
    "filterThemes": [
      "TRAN"
    ],
    "id": 47,
    "description": "OpenData Rostock",
    "defaultAttribution": "OpenData Rostock",
    "defaultAttributionLink": null,
    "providerPrefix": "",
    "dcatProviderField": "maintainer",
    "cron": {
      "pattern": "05 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "sparql_limbo",
    "includeTimestamp": true,
    "priority": 0,
    "type": "SPARQL",
    "maxRecords": null,
    "startPosition": null,
    "customCode": "doc.distribution.forEach(dist => {\n\tif(dist.accessURL.endsWith('.ttl'))\n\t\tdist.format = ['Turtle-File'];\n\telse if(dist.accessURL.endsWith('.sparql'))\n\t\tdist.format = ['SPARQL'];\n\telse if(dist.accessURL.endsWith('.nt'))\n\t\tdist.format = ['N-Triples'];\n});\n\n\nif(doc.title.indexOf('bahn') !== -1 || doc.title.indexOf('train') !== -1){\n\tdoc.extras.subgroups = ['railway'];\n\tif(doc.title.indexOf('ampeln') !== -1 || doc.title.indexOf('bike') !== -1 || doc.title.indexOf('carsharing') !== -1){\n\t\tdoc.extras.subgroups.push('roads');\n\t}\n}\n\ndoc.extras.display_contact = [{\n            \"name\": \"LimboConsortium\",\n            \"mbox\": null,\n\t\t\t\"homepage\": \"https://data.limbo-project.org/LimboConsortium\"\n          }];",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "endpointUrl": "https://metadata.limbo-project.org/sparql",
    "query": "PREFIX dcat: <http://www.w3.org/ns/dcat#>\nPREFIX dataid: <http://dataid.dbpedia.org/ns/core#>\nPREFIX prov: <http://www.w3.org/ns/prov#> \nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX dcatx: <http://www.example.org/>\nPREFIX owl: <http://www.w3.org/2002/07/owl#>\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n\nSELECT DISTINCT ?id ?publisher ?source_link ?title ?description ?distribution_title  ?distribution_url ?issued ?modified ?license (CONCAT(\"mfund-projekt:LIMBO, mfund-fkz:19F2029, \", GROUP_CONCAT(DISTINCT ?keyword; SEPARATOR=\", \")) AS ?keywords) (GROUP_CONCAT(DISTINCT ?dcat_theme; SEPARATOR=\", \") AS ?dcat_theme)\nWHERE {\n?limbo_ds dataid:group ?group;\n\t\t\tdataid:artifact ?artifact;\n            dct:identifier ?id;\n            dcat:distribution ?limbo_dist;\n            dct:issued ?issued;\n            dct:license ?limbo_license;\n\t    rdf:type ?type.\n\n?limbo_dist dcat:downloadURL ?distribution_url ;\n            dcatx:localId ?distribution_title.\nOPTIONAL {\n\t?limbo_ds dct:publisher ?publisher.\n}\n\nOPTIONAL {\n\t?limbo_ds void:objectsTarget ?objectsTarget;\n\t\t\tvoid:subjectsTarget ?subjectsTarget.\n\t?objectsTarget dataid:artifact ?objectsTarget_artifact.\n\t?subjectsTarget dataid:artifact ?subjectsTarget_artifact.\n}\n\nOPTIONAL {\n\t?limbo_ds prov:wasDerivedFrom ?mcloud_dist.\n\t?mcloud_ds dcat:distribution ?mcloud_dist ;\n            dct:title ?mcloud_title;\n            dct:description ?mcloud_description;\n            dcat:keyword ?keyword;\n            dcat:theme ?dcat_theme;\n            dcat:landingPage ?mcloud_landingPage .\n}\n\n\nBIND(\"https://data.limbo-project.org/NullLicense,https://datasets.limbo-project.org/NullLicense,http://dcat-ap.de/def/licenses/other-open\" as ?null_licenses).\nBIND(\n       IF(\n           CONTAINS(?null_licenses, str(?limbo_license)),\n           uri(\"http://dcat-ap.de/def/licenses/dl-by-de/2.0\"),\n           ?limbo_license\n       )\nas ?license).\n\t\t\nBIND (\n\tIF(\n\t\tbound(?mcloud_title),\n\t\tCONCAT(\"Limbo-Daten f&uuml;r <a href=\\\"\",?mcloud_landingPage ,\"\\\">\",?mcloud_title,\"</a> \\r\\n\\r\\nOriginal:\\r\\n\",?mcloud_description),\n\t\tIF(\n\t\t\tbound(?objectsTarget),\n\t\t\tCONCAT(\"Sammlung von Links zwischen den Datensammlungen <a href=\\\"\",?subjectsTarget,\"\\\">\",?subjectsTarget_artifact,\"</a>\",\n\t\t\t\" und <a href=\\\"\",?objectsTarget,\"\\\">\",?objectsTarget_artifact,\"</a> im RDF-Format\"),\n\t\t\tCONCAT(\"Datensammlung mit Informationen zu \",?artifact,\" im RDF-Format\")\n\t\t)\n\t)\n as ?description).\n \n \nBIND (\n\tIF(\n\t\tbound(?mcloud_title),\n\t\tCONCAT(\"LIMBO - \",?mcloud_title),\n\t\tCONCAT(\"LIMBO - \",?artifact)\n\t)\nas ?title).\n\nBIND (?limbo_ds as ?source_link)\nBIND (?issued as ?modified)\n\nFILTER (?group = 'org.limbo')\n\n# get the most current version by filtering out any dataset duplicates with earlier release dates\nFILTER(!EXISTS {\n ?limbo_ds2 dataid:artifact ?art . \n ?limbo_ds dataid:artifact ?art . \n ?limbo_ds2 dct:issued ?issued2 .\n FILTER (?issued2 > ?issued) })\n\n}\nGROUP BY ?id ?publisher ?source_link ?title ?description ?distribution_title  ?distribution_url ?issued ?modified ?license",
    "filterTags": [],
    "filterThemes": [],
    "id": 48,
    "eitherKeywords": [],
    "description": "LIMBO",
    "defaultAttribution": "LIMBO",
    "defaultAttributionLink": "https://www.limbo-project.org/",
    "disable": false,
    "cron": {
      "pattern": "59 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_dfs",
    "includeTimestamp": true,
    "priority": 5,
    "type": "CSW",
    "maxRecords": 10,
    "startPosition": 1,
    "customCode": "if(doc.distribution[0].format[0] === 'onLine'){\n    doc.distribution = [];\n} else {\n    doc.extras.metadata.is_valid = false;\n}",
    "defaultMcloudSubgroup": [
      "aviation"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": false
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://haleconnect.com/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 49,
    "description": "Deutsche Flugsicherung",
    "defaultAttribution": "Deutsche Flugsicherung",
    "defaultAttributionLink": "https://www.dfs.de",
    "recordFilter": "            <ogc:Filter>\n               <ogc:PropertyIsEqualTo>\n                    <ogc:PropertyName>apiso:OrganisationName</ogc:PropertyName>\n                    <ogc:Literal>DFS</ogc:Literal>\n               </ogc:PropertyIsEqualTo>\n            </ogc:Filter>",
    "cron": {
      "pattern": "55 02 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_mobidata_bw",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "",
    "defaultMcloudSubgroup": [
      "railway",
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://www.mobidata-bw.de/",
    "filterTags": [],
    "filterGroups": [],
    "providerPrefix": "MobiData-BW: ",
    "providerField": "author",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": null,
    "id": 50,
    "description": "MobiData BW",
    "defaultAttribution": "MobiData BW",
    "defaultAttributionLink": "https://www.mobidata-bw.de",
    "additionalSearchFilter": "",
    "cron": {
      "pattern": "07 03 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_oepnv",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "if(this.source.organization.name === 'hvv')\n   this.skipped = true;\nif(this.source.organization.name === 'vbb')\n   this.skipped = true;",
    "defaultMcloudSubgroup": [
      "railway",
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://www.opendata-oepnv.de",
    "filterTags": [],
    "filterGroups": [],
    "providerPrefix": "OpenData ÖPNV: ",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": null,
    "id": 55,
    "description": "OpenData ÖPNV",
    "defaultAttribution": "OpenData ÖPNV",
    "defaultAttributionLink": "https://www.opendata-oepnv.de",
    "additionalSearchFilter": "",
    "cron": {
      "active": true,
      "pattern": "56 02 * * *"
    },
    "disable": false
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_mundialis",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "aviation"
    ],
    "defaultDCATCategory": [
      "ENVI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://data.mundialis.de/geonetwork/srv/eng/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 58,
    "description": "Mundialis",
    "defaultAttribution": "Mundialis",
    "defaultAttributionLink": "https://www.mundialis.de",
    "recordFilter": "            <ogc:Filter>\n                        <ogc:PropertyIsEqualTo>\n                            <ogc:PropertyName>anyText</ogc:PropertyName>\n                            <ogc:Literal>mfund</ogc:Literal>\n                        </ogc:PropertyIsEqualTo>\n            </ogc:Filter>",
    "cron": {
      "pattern": "58 02 * * *",
      "active": true
    },
    "disable": false
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_fair",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "aviation"
    ],
    "defaultDCATCategory": [
      "ENVI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://fair-metadata.de/geonetwork/srv/eng/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 60,
    "description": "FAIR",
    "defaultAttribution": "FAIR",
    "defaultAttributionLink": "https://fair-metadata.de/geonetwork",
    "recordFilter": null,
    "cron": {
      "pattern": "57 02 * * *",
      "active": true
    },
    "disable": true
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_vag",
    "includeTimestamp": true,
    "priority": null,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "const roadsOnlyIDs = [' 926ee389-558c-488b-879e-7914d4c072d9', '6773a9ab-22c7-4970-b907-2c0bcd2635ba'];\nconst roadsAdditionalIDs = ['08eb49f9-0f6c-4b76-96fd-5f8e3a0ac593', 'a2347b5d-8214-4fa4-a68a-778ec1dc3a5d'];\n\nif (roadsOnlyIDs .indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['roads'];\n}\nelse if (roadsAdditionalIDs .indexOf(this.source.id) !== -1) {\n  doc.extras.subgroups = ['roads', 'railway'];\n}",
    "defaultMcloudSubgroup": [
      "railway"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://opendata.vag.de",
    "filterTags": [],
    "filterGroups": [],
    "providerPrefix": "",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": null,
    "id": 61,
    "description": "VAG",
    "defaultAttribution": "VAG",
    "defaultAttributionLink": "https://opendata.vag.de",
    "additionalSearchFilter": "",
    "cron": {
      "pattern": "08 03 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_bfg",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "waters"
    ],
    "defaultDCATCategory": [
      "ENVI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://geoportal.bafg.de/csw/api",
    "eitherKeywords": [
      "opendata"
    ],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 62,
    "description": "BfG",
    "defaultAttribution": "Bundesanstalt für Gewässerkunde",
    "defaultAttributionLink": "https://geoportal.bafg.de/",
    "recordFilter": "<ogc:Filter>\n    <ogc:And>\n        <ogc:PropertyIsEqualTo>\n            <ogc:PropertyName>Subject</ogc:PropertyName>\n            <ogc:Literal>opendata</ogc:Literal>\n        </ogc:PropertyIsEqualTo>\n        <ogc:PropertyIsEqualTo>\n            <ogc:PropertyName>OrganisationName</ogc:PropertyName>\n            <ogc:Literal>Bundesanstalt für Gewässerkunde</ogc:Literal>\n        </ogc:PropertyIsEqualTo>\n    </ogc:And>\n</ogc:Filter>",
    "cron": {
      "pattern": "30 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_baw",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "waters"
    ],
    "defaultDCATCategory": [
      "ENVI"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://datenrepository.baw.de/csw",
    "eitherKeywords": [
      "opendata"
    ],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 63,
    "description": "BAW-Datenrepository",
    "defaultAttribution": "BAW-Datenrepository",
    "defaultAttributionLink": "https://datenrepository.baw.de",
    "recordFilter": null,
    "cron": {
      "pattern": "45 2 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "csw_gdi_de_baysis",
    "includeTimestamp": true,
    "priority": null,
    "type": "CSW",
    "maxRecords": 100,
    "startPosition": 1,
    "customCode": null,
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "xpaths": {
      "capabilities": {
        "abstract": "/csw:Capabilities/ows:ServiceIdentification/ows:Abstract",
        "serviceProvider": "/csw:Capabilities/ows:ServiceProvider",
        "title": "/csw:Capabilities/ows:ServiceIdentification/ows:Title"
      }
    },
    "getRecordsUrl": "https://gdk.gdi-de.org/gdi-de/srv/ger/csw",
    "eitherKeywords": [],
    "httpMethod": "POST",
    "resultType": "results",
    "id": 64,
    "description": "GDI-DE (BAYSIS)",
    "defaultAttribution": "GDI-DE",
    "defaultAttributionLink": "https://www.geoportal.de/portal/main/",
    "recordFilter": "            <ogc:Filter>\n                    <ogc:PropertyIsEqualTo>\n                        <ogc:PropertyName>Subject</ogc:PropertyName>\n                        <ogc:Literal>BAYSIS</ogc:Literal>\n                    </ogc:PropertyIsEqualTo>\n            </ogc:Filter>",
    "cron": {
      "pattern": "10 03 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "ckan_fid",
    "includeTimestamp": true,
    "priority": -1,
    "type": "CKAN",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "if(this.source.organization.id == '7f632648-7f08-4cf3-9568-12895ace3125'){\n    this.skipped = true;\n}\ndoc.extras.display_contact = [\n          {\n            \"name\": \"FID move\"\n          }\n        ]",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "ckanBaseUrl": "https://data.fid-move.de",
    "filterTags": [],
    "filterGroups": [],
    "providerPrefix": "FID move: ",
    "providerField": "organization",
    "requestType": "Search",
    "markdownAsDescription": false,
    "groupChilds": false,
    "defaultLicense": null,
    "id": 65,
    "description": "FID move",
    "defaultAttribution": "FID move",
    "defaultAttributionLink": null,
    "additionalSearchFilter": "",
    "cron": {
      "pattern": "09 03 * * *",
      "active": true
    }
  },
  {
    "elasticSearchUrl": "http://elastic:9200",
    "index": "dcat_berlin",
    "includeTimestamp": true,
    "priority": null,
    "type": "DCAT",
    "maxRecords": 100,
    "startPosition": 0,
    "customCode": "//doc.extras.metadata.source.portal_link = 'https://daten.berlin.de/datensaetze/' + this.source.name;\n\n            this.skipped = true;\n\n            if(doc.keywords.indexOf('verkehr') !== -1 || doc.keywords.indexOf('Verkehr') !== -1 || doc.theme.includes('http://publications.europa.eu/resource/authority/data-theme/TRAN'))\n            {\n                this.skipped = false;\n                doc.extras.subgroups = ['infrastructure'];\n\n                let publisher = doc.extras.display_contact[0].name.substr(this.settings.providerPrefix.length);\n\n                if(doc.title.toLowerCase().indexOf('straßenverkehr') !== -1 \n                       || doc.title.toLowerCase().indexOf('strassenverkehr') !== -1\n                       || doc.title.toLowerCase().indexOf('radverkehr') !== -1){\n                        doc.extras.subgroups = ['roads'];\n               }\n\n                switch(publisher){\n                    case 'Senatsverwaltung für Umwelt, Verkehr und Klimaschutz':\n                        doc.extras.subgroups = ['roads'];\n                        break;\n                    case 'Senatsverwaltung für Umwelt, Mobilität, Verbraucher- und Klimaschutz':\n                        doc.extras.subgroups = ['roads'];\n                        break;\n                    case 'Senatsverwaltung Umwelt, Verkehr und Klimaschutz':\n                        doc.extras.subgroups = ['roads'];\n                        break;\n                    case 'Senatsverwaltung für Stadtentwicklung und Wohnen Berlin':\n                        doc.extras.subgroups = ['infrastructure'];\n                        break;\n                    case 'VBB - Verkehrsverbund Berlin-Brandenburg GmbH':\n                        doc.extras.subgroups = ['roads', 'railway'];\n                        break;\n                    case 'Gemeinsame Landesplanungsabteilung Berlin-Brandenburg':\n                        doc.extras.subgroups = ['roads', 'railway'];\n                        break;\n                    case 'DAI-Labor/TU-Berlin':\n                        doc.extras.subgroups = ['roads'];\n                        break;\n                }\n\n                const railwayAdditionalIDs = ['e4504444-2011-436d-8f5b-4c90c0b0b540',\n                    'ce54c74c-0e65-4f27-8178-9901411cb06f',\n                    '97e83926-3a86-4015-b93a-a6dfe5314855',\n                    '41a15066-5bfd-479d-9943-d277487c5b37',\n                    'a35bedfb-6c45-4e0a-a9f6-9c43adf798da',\n                    'ef2defcc-20ff-417d-a05e-299f099f7033',\n                    '676231d3-5b9b-4172-8ef7-6e3747bd19d7',\n                    '3a9f5e10-5ecc-4910-a3e3-012f14f8d3f4',\n                    '33e3d20d-0e5b-4728-b5c1-eaab5c11c25b',\n                    '181add76-a8c5-4c69-b715-be83e07c7574',\n                    '918d493f-04ce-45d2-a85b-7e482bea61a0',\n                    '6d06b54c-3429-4855-a2ff-27651489dfbc',\n                    'e3cae5ff-725e-4704-b357-26a4ee3df413',\n                    '4f0894f6-f42b-4a81-9034-c38016f76721',\n                    '116f91fa-52b5-4007-a050-a204a0ebf5fb',\n                    'a83e70bc-2922-4a92-8c94-a9debe326f9f',\n                    'a5023f76-759b-4b45-bc4e-5a8060119803',\n                    '370253a5-8004-4675-9fbe-038678022350'];\n\n                const aviationAdditionalIDs = ['181add76-a8c5-4c69-b715-be83e07c7574',\n                    '918d493f-04ce-45d2-a85b-7e482bea61a0',\n                    '2f41315a-9aba-41cc-8c98-ecb6467772f8',\n                    '4d163868-c451-4355-881d-a227be5ec856',\n                    '72f0078b-0475-42bb-bd64-272d18d4faca',\n                    'a83e70bc-2922-4a92-8c94-a9debe326f9f',\n                    'a5023f76-759b-4b45-bc4e-5a8060119803',\n                    '370253a5-8004-4675-9fbe-038678022350'];\n\n                const infrastructureAdditionalIDs = ['3ba6ed3c-644a-4c4d-9838-cde959b00737',\n                    '102a570f-46b2-444c-8f53-59501c6688ed',\n                    '47218921-1623-405d-9041-f407b142b375',\n                    'ed3dcc0d-e3b4-4c70-9423-e8561e577dd3'];\n\n                const climateAdditionalIDs =['8b289abb-decd-4887-98c5-ee80381c21b4',\n                    '2ab0227e-6c6e-4441-b1a9-f0d1c8560a25',\n                    '1830dd65-76f2-47f1-8916-1d21fd80127e',\n                    '08e002be-37d4-4ad9-803c-c0a5b452bbfd',\n                    '82113feb-84a1-4e36-9c56-6235b9e31543',\n                    '60115464-39a7-43eb-b675-76030ef8570d',\n                    'da8f803c-e745-43c0-8c94-9ee295145a86',\n                    'd8516433-37b6-463a-afc2-3ecbaa1fab41',\n                    'dc126af9-9e22-4e00-9fca-804e30ea49ab',\n                    'e4b06b31-cc9e-4b3e-978e-8c276dd5e991',\n                    '0efd73aa-9d7d-4cba-96c0-608c194fba40',\n                    '084a03e9-9c54-40ea-bd0f-ae1e0d340a8a',\n                    '063d0b96-0796-4c20-926b-af7330eaec7b',\n                    '71a5da70-5567-48da-90c0-8f9d44c7fa48'];\n\n                const watersAdditionalIDs = ['c70763b1-4f86-4128-8da4-6caf783ebda1',\n                    '4255c7e5-a318-4ab8-b08e-d05cc2e4643b',\n                    'e27d7350-dde1-4a45-8020-2bbdc779d1d1',\n                    'a4bfd86a-75d4-46b0-b416-d783c9c0472a',\n                    'ff5c67e9-95c3-43f2-9895-17b1339add57',\n                    'a83e70bc-2922-4a92-8c94-a9debe326f9f',\n                    'a5023f76-759b-4b45-bc4e-5a8060119803',\n                    '370253a5-8004-4675-9fbe-038678022350'];\n\n                const roadsAdditionalIDs = ['f5efd167-ea1b-4b87-baa3-ae06bb4d7499',\n                    '84a678a7-a197-457e-8ca1-f04cbb157f42',\n                    '7aac7ced-8df7-44d1-8897-8d1a9764adaa',\n                    '059f7694-4940-4ee9-9f03-ac67eb65dd34',\n                    '8cbfbfc5-fa55-4e08-ace5-5aff735557f7',\n                    '8ea61d91-8759-4383-b92c-1cda5aa1d657',\n                    '9573fe92-0482-4bd8-b0dd-8dcf031d7d42',\n                    'c3f99292-25c8-4d64-9514-e493b0fb5ff9',\n                    '883bc929-94f3-4585-9d3d-374d2ae1c720',\n                    'ec4a828f-aecd-47bf-8eeb-697c9efc9378',\n                    'a83e70bc-2922-4a92-8c94-a9debe326f9f',\n                    'a5023f76-759b-4b45-bc4e-5a8060119803',\n                    '370253a5-8004-4675-9fbe-038678022350',\n                    '20689d9b-c7c6-48d5-a4fc-7288160c0482',\n                    'aed9be10-6d6b-4211-8d6b-c84a91369533'];\n\n                const roadsOnlyIDs = ['c3d4a883-3cc7-49de-822e-49ae69f8b83a',\n                    '6bf5eadb-f558-4cf0-9e91-be9900ff3379',\n                    '86dda868-175e-42eb-9094-380e5f775487',\n                    'be8c1bf6-50cf-4fab-8ea3-179ca947652a',\n                    'e710d43e-ae90-4058-942c-4a978de61083'];\n\n                const aviationOnlyIDs = ['b99003fa-3f3c-40e5-b2df-b316f257a2fc',\n                    '3afbc3aa-befa-4ae1-8821-b6094c0747cc',\n                    '4f9ef71d-d0e0-45cb-b716-21a714744252',\n                    '962c7b9a-cc85-48bb-99b2-a1c06c4b792b',\n                    '638c6b17-b0af-4208-a7c8-cb28614e000e',\n                    'ac89e40a-d6f7-439d-8c52-50202686efdd'];\n\n                const climateOnlyIDs =['3f9ef3d1-9618-4045-a385-dcc79c40a378'];\n\n                const climateAndWaterOnly = ['b9ca3d00-a512-47c3-8bbb-179c629bed51',\n                    '36d9cf15-43da-4b40-8470-2227ec9c3456',\n                    'c3b0cd66-3558-4af4-8ece-49ead068df1d',\n                    'b06da9f0-67e0-439c-a5e8-d79c6d3252e7'];\n\n                if (railwayAdditionalIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups.push('railway');\n                }\n                if (aviationAdditionalIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups.push('aviation');\n                }\n                if (infrastructureAdditionalIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups.push('infrastructure');\n                }\n                if (climateAdditionalIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups.push('climate');\n                }\n                if (watersAdditionalIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups.push('waters');\n                }\n                if (roadsAdditionalIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups.push('roads');\n                }\n                if (roadsOnlyIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups = ['roads'];\n                }\n                if (aviationOnlyIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups = ['aviation'];\n                }\n                if (climateOnlyIDs.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups = ['climate'];\n                }\n                if (climateAndWaterOnly.indexOf(this.uuid) !== -1) {\n                    doc.extras.subgroups = ['climate', 'waters'];\n                }\n            }\n            else if(doc.theme.includes('http://publications.europa.eu/resource/authority/data-theme/ECON')){\n                if(doc.title === 'E-Mobility Ladesäulen in Berlin' || doc.title === 'Ladesäulen im öffentlichen und halböffentlichen Raum'){\n                    doc.extras.subgroups = ['roads', 'infrastructure'];\n                    this.skipped = false;\n                }\n                if(doc.title.indexOf('Breitbandversorgung') !== -1 || doc.title.indexOf('Breitbandverfügbarkeit') !== -1){\n                    doc.extras.subgroups = ['infrastructure'];\n                    this.skipped = false;\n                }\n            }",
    "defaultMcloudSubgroup": [
      "roads"
    ],
    "defaultDCATCategory": [
      "TRAN"
    ],
    "dateSourceFormats": [],
    "blacklistedIds": [],
    "whitelistedIds": [],
    "rejectUnauthorizedSSL": true,
    "rules": {
      "containsDocumentsWithData": null
    },
    "isIncremental": false,
    "maxConcurrent": 1,
    "skipUrlCheckOnHarvest": false,
    "catalogUrl": "https://datenregister.berlin.de/catalog_no_fb.rdf",
    "filterTags": [],
    "filterThemes": [],
    "id": 66,
    "description": "OpenData Berlin (DCAT - Govdata-Katalog)",
    "defaultAttribution": "OpenData Berlin",
    "defaultAttributionLink": null,
    "providerPrefix": "OpenData Berlin: ",
    "dcatProviderField": "publisher",
    "cron": {
      "pattern": "5 2 * * *",
      "active": true
    }
  }
]