# This script needs to be run on the Docker host
# once after the ES container is started the first time.

# This script sets up user accounts and API access to Elasticsearch.

# 1. Change passwords in set-pw-es.
# 2. Un-comment the following lines and replace the $TOKEN with the output of
# $ echo -n elastic:YOUR_ELASTIC_PASSWORD | base64
# 3. Run this file.

if [ ! $TOKEN ]; then
    echo "You need to set the environment variable TOKEN to your initial Elasticsearch username and password, encoded in base64."
    echo "Usage: TOKEN=\`echo -n elastic:\$ES_PASSWORD | base64 -w0\` sh ./setup-access.sh"
    exit 0
fi

# # setup internal passwords
# sudo docker exec mcloud-elastic /bin/sh -c "yum -y install expect && /usr/share/elasticsearch/bin/set-pw-es"

# # create readonly role
# curl -X POST http://localhost:9200/_xpack/security/role/read_role \
# -H 'Content-Type: application/json' \
# -H 'Authorization: Basic '"$TOKEN" \
# -d @create-roles.json

# # create readonly user
# curl -XPOST http://localhost:9200/_xpack/security/user/read_user \
# -H 'Content-Type: application/json' \
# -H 'Authorization: Basic '"$TOKEN" \
# -d @create-users.json


#!/bin/bash

# This script needs to be run on the Docker host
# once after the ES container is started the first time.

# This script sets up user accounts and API access to Elasticsearch.

# 1. Change passwords in .env
# 2. Set the environment variable TOKEN to the output of
#     $ echo -n elastic:YOUR_ELASTIC_PASSWORD | base64 -w0
# 3. Run this file.


set_password()
{
    USER=$1
    PASSWORD=$2
    curl http://localhost:9200/_xpack/security/user/${USER}/_password \
        -H 'Authorization: Basic '"$TOKEN" \
        -H 'Content-Type: application/json' \
        -d '{ "password": "'"${PASSWORD}"'" }' -v
}

# set passwords for elasticsearch standard users
cat .env | while read line || [[ -n $line ]];
do
    [[ ${line//[[:space:]]/} =~ ^#.* || -z "$line" ]] && continue
    echo $line | tr "=" "\n" | while read -r user; do
        read -r password
        user=`echo ${user//PASSWORD/system} | tr '[:upper:]' '[:lower:]'`
        set_password ${user} ${password}
        # after a new password has been set for the elastic user, use it in the auth token from here on
        if [[ ${user} == "elastic" ]]; then
            TOKEN=`echo -n elastic:${password} | base64 -w0`
        fi
    done
done

## create readonly role
#curl -X POST http://localhost:9200/_xpack/security/role/readonly \
#-H 'Content-Type: application/json' \
#-H 'Authorization: Basic '"$TOKEN" \
#-d @create-roles.json
#
## create readonly user
#curl -X POST http://localhost:9200/_xpack/security/user/readonly \
#-H 'Content-Type: application/json' \
#-H 'Authorization: Basic '"$TOKEN" \
#-d @create-users.json

